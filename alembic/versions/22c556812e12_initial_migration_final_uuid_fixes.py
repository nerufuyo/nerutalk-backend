"""Initial migration final UUID fixes

Revision ID: 22c556812e12
Revises: 
Create Date: 2025-07-09 10:33:44.498563

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '22c556812e12'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('title_template', sa.String(length=200), nullable=False),
    sa.Column('body_template', sa.String(length=1000), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_notification_templates_id'), 'notification_templates', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('chats',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('chat_type', sa.Enum('PRIVATE', 'GROUP', name='chattype'), nullable=False),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chats_id'), 'chats', ['id'], unique=False)
    op.create_table('device_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('device_type', sa.Enum('IOS', 'ANDROID', 'WEB', name='devicetype'), nullable=False),
    sa.Column('device_id', sa.String(), nullable=True),
    sa.Column('app_version', sa.String(), nullable=True),
    sa.Column('device_name', sa.String(), nullable=True),
    sa.Column('os_version', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_tokens_id'), 'device_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_device_tokens_token'), 'device_tokens', ['token'], unique=False)
    op.create_table('geofence_areas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('center_latitude', sa.Float(), nullable=False),
    sa.Column('center_longitude', sa.Float(), nullable=False),
    sa.Column('radius', sa.Float(), nullable=False),
    sa.Column('fence_type', sa.String(length=20), nullable=True),
    sa.Column('trigger_on_enter', sa.Boolean(), nullable=True),
    sa.Column('trigger_on_exit', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_geofence_areas_id'), 'geofence_areas', ['id'], unique=False)
    op.create_table('location_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('start_latitude', sa.Float(), nullable=False),
    sa.Column('start_longitude', sa.Float(), nullable=False),
    sa.Column('end_latitude', sa.Float(), nullable=True),
    sa.Column('end_longitude', sa.Float(), nullable=True),
    sa.Column('activity_type', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('is_anonymized', sa.Boolean(), nullable=True),
    sa.Column('retention_days', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_history_id'), 'location_history', ['id'], unique=False)
    op.create_table('user_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('location_type', sa.String(length=50), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('is_shared', sa.Boolean(), nullable=True),
    sa.Column('provider', sa.String(length=20), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('bearing', sa.Float(), nullable=True),
    sa.Column('location_timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_locations_id'), 'user_locations', ['id'], unique=False)
    op.create_table('video_calls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_name', sa.String(), nullable=False),
    sa.Column('call_type', sa.Enum('AUDIO', 'VIDEO', name='calltype'), nullable=False),
    sa.Column('status', sa.Enum('INITIATED', 'RINGING', 'ANSWERED', 'DECLINED', 'ENDED', 'MISSED', 'FAILED', name='callstatus'), nullable=False),
    sa.Column('caller_id', sa.UUID(), nullable=False),
    sa.Column('callee_id', sa.UUID(), nullable=False),
    sa.Column('app_id', sa.String(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('uid', sa.Integer(), nullable=True),
    sa.Column('initiated_at', sa.DateTime(), nullable=True),
    sa.Column('answered_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('is_group_call', sa.Boolean(), nullable=True),
    sa.Column('quality_rating', sa.Integer(), nullable=True),
    sa.Column('end_reason', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['callee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['caller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_video_calls_channel_name'), 'video_calls', ['channel_name'], unique=True)
    op.create_index(op.f('ix_video_calls_id'), 'video_calls', ['id'], unique=False)
    op.create_table('call_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('left_at', sa.DateTime(), nullable=True),
    sa.Column('is_muted', sa.Boolean(), nullable=True),
    sa.Column('is_video_enabled', sa.Boolean(), nullable=True),
    sa.Column('agora_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['call_id'], ['video_calls.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_call_participants_id'), 'call_participants', ['id'], unique=False)
    op.create_table('geofence_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('geofence_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=10), nullable=False),
    sa.Column('location_latitude', sa.Float(), nullable=False),
    sa.Column('location_longitude', sa.Float(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('notification_sent', sa.Boolean(), nullable=True),
    sa.Column('event_timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['geofence_id'], ['geofence_areas.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_geofence_events_id'), 'geofence_events', ['id'], unique=False)
    op.create_table('location_shares',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('shared_with_user_id', sa.UUID(), nullable=True),
    sa.Column('shared_with_chat_id', sa.UUID(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('is_live', sa.Boolean(), nullable=True),
    sa.Column('update_interval', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('stopped_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['user_locations.id'], ),
    sa.ForeignKeyConstraint(['shared_with_chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['shared_with_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_shares_id'), 'location_shares', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('message_type', sa.Enum('TEXT', 'IMAGE', 'VIDEO', 'AUDIO', 'FILE', 'STICKER', 'GIF', 'LOCATION', 'SYSTEM', name='messagetype'), nullable=False),
    sa.Column('status', sa.Enum('SENT', 'DELIVERED', 'READ', 'FAILED', name='messagestatus'), nullable=False),
    sa.Column('file_url', sa.Text(), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('thumbnail_url', sa.Text(), nullable=True),
    sa.Column('message_metadata', sa.Text(), nullable=True),
    sa.Column('reply_to_id', sa.UUID(), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('sender_id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['reply_to_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_table('push_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('device_token_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('body', sa.String(length=500), nullable=False),
    sa.Column('data', sa.String(), nullable=True),
    sa.Column('fcm_message_id', sa.String(), nullable=True),
    sa.Column('fcm_response', sa.String(), nullable=True),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_sent', sa.Boolean(), nullable=True),
    sa.Column('is_delivered', sa.Boolean(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['device_token_id'], ['device_tokens.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_push_notifications_id'), 'push_notifications', ['id'], unique=False)
    op.create_table('chat_participants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('last_read_message_id', sa.UUID(), nullable=True),
    sa.Column('role', sa.Enum('MEMBER', 'ADMIN', 'OWNER', name='participantrole'), nullable=False),
    sa.Column('is_muted', sa.Boolean(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['last_read_message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_participants_id'), 'chat_participants', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chat_participants_id'), table_name='chat_participants')
    op.drop_table('chat_participants')
    op.drop_index(op.f('ix_push_notifications_id'), table_name='push_notifications')
    op.drop_table('push_notifications')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_location_shares_id'), table_name='location_shares')
    op.drop_table('location_shares')
    op.drop_index(op.f('ix_geofence_events_id'), table_name='geofence_events')
    op.drop_table('geofence_events')
    op.drop_index(op.f('ix_call_participants_id'), table_name='call_participants')
    op.drop_table('call_participants')
    op.drop_index(op.f('ix_video_calls_id'), table_name='video_calls')
    op.drop_index(op.f('ix_video_calls_channel_name'), table_name='video_calls')
    op.drop_table('video_calls')
    op.drop_index(op.f('ix_user_locations_id'), table_name='user_locations')
    op.drop_table('user_locations')
    op.drop_index(op.f('ix_location_history_id'), table_name='location_history')
    op.drop_table('location_history')
    op.drop_index(op.f('ix_geofence_areas_id'), table_name='geofence_areas')
    op.drop_table('geofence_areas')
    op.drop_index(op.f('ix_device_tokens_token'), table_name='device_tokens')
    op.drop_index(op.f('ix_device_tokens_id'), table_name='device_tokens')
    op.drop_table('device_tokens')
    op.drop_index(op.f('ix_chats_id'), table_name='chats')
    op.drop_table('chats')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_notification_templates_id'), table_name='notification_templates')
    op.drop_table('notification_templates')
    # ### end Alembic commands ###
